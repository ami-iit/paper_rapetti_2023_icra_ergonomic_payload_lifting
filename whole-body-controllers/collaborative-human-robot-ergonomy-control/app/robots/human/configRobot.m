% CONFIGROBOT initializes parameters specific of a particular robot
%             (e.g., icubGazeboSim)

%% --- Initialization ---
ConfigRobot.ROBOT_DOF         = 31;


% Robot configuration for WBToolbox
WBTConfigRobot           = WBToolbox.Configuration;
WBTConfigRobot.RobotName = 'Human';
WBTConfigRobot.UrdfFile  = 'humanSubject03_48dof.urdf';
WBTConfigRobot.LocalName = 'WBT';

% Controlboards and joints list. Each joint is associated to the corresponding controlboard 
WBTConfigRobot.ControlBoardsNames     = {'HumanControlBoard'};


% Joint names
WBTConfigRobot.ControlledJoints                   =  {'jT9T8_rotx', ...
                                                      'jT9T8_rotz', ...
                                                      'jRightShoulder_rotx', ...
                                                      'jRightShoulder_roty', ...
                                                      'jRightShoulder_rotz', ...
                                                      'jRightElbow_roty', ...
                                                      'jRightElbow_rotz', ...
                                                      'jLeftShoulder_rotx', ...
                                                      'jLeftShoulder_roty', ...
                                                      'jLeftShoulder_rotz', ...
                                                      'jLeftElbow_roty', ...
                                                      'jLeftElbow_rotz', ...
                                                      'jLeftHip_rotx', ...
                                                      'jLeftHip_roty', ...
                                                      'jLeftHip_rotz', ...
                                                      'jLeftKnee_roty', ...
                                                      'jLeftKnee_rotz', ...
                                                      'jLeftAnkle_rotx', ...
                                                      'jLeftAnkle_roty', ...
                                                      'jLeftAnkle_rotz', ...
                                                      'jLeftBallFoot_roty', ...
                                                      'jRightHip_rotx', ...
                                                      'jRightHip_roty', ...
                                                      'jRightHip_rotz', ...
                                                      'jRightKnee_roty', ...
                                                      'jRightKnee_rotz', ...
                                                      'jRightAnkle_rotx', ...
                                                      'jRightAnkle_roty', ...
                                                      'jRightAnkle_rotz', ...
                                                      'jRightBallFoot_roty', ...
                                                      'jL5S1_roty'};

% Frames list
ConfigRobot.Frames.BASE       = 'Pelvis'; 
ConfigRobot.Frames.LEFT_FOOT  = 'LeftToe';
ConfigRobot.Frames.RIGHT_FOOT = 'RightToe';
ConfigRobot.Frames.LEFT_HAND  = 'LeftHand';
ConfigRobot.Frames.RIGHT_HAND = 'RightHand';
ConfigRobot.Frames.CHEST      = 'T8';
ConfigRobot.Frames.COM        = 'com';

% if TRUE, the controller will STOP if the joints hit the joints limits
% and/or if the (unsigned) difference between two consecutive joints
% encoders measurements is greater than a given threshold.
ConfigRobot.Flag.EMERGENCY_STOP_WITH_JOINTS_LIMITS  = false;
ConfigRobot.Flag.EMERGENCY_STOP_WITH_ENCODER_SPIKES = false;

% Wrench ports
ConfigRobot.Ports.WRENCH_FEET  = '/HDE/HumanWrenchWrapper/wrench:o';


%% -- Gains --
% postural
ConfigRobot.Gains.GainPostural.Kp = diag(zeros(31, 1)) * 0.5;   % right leg

ConfigRobot.Gains.GainPostural.Kd = 2 * ((ConfigRobot.Gains.GainPostural.Kp).^(1/2)) / 10;

% momentum
ConfigRobot.Gains.GainMomentum.Ki = [0; 0; 0; 0; 0; 0]; % only angular part is implemented
ConfigRobot.Gains.GainMomentum.Kp = [0; 0; 0; 0; 0; 0];
ConfigRobot.Gains.GainMomentum.Kd = 2 * ((ConfigRobot.Gains.GainMomentum.Kp).^(1/2)) / 10;

%% -- Regularization --
ConfigRobot.Reg.LambdaInvDump = 1;
ConfigRobot.Reg.AInvTol = 1e-5;

% List of link where to use the constraints for force optimization
ConfigRobot.linksUseConstraintMatrix = [0, 0, 0, 0];

%% -- Safety --
ConfigRobot.Safety.torqueSaturation = 100;
ConfigRobot.Safety.EMERGENCY_STOP_WITH_JOINTS_LIMITS = false;
ConfigRobot.Safety.jointLimitTollerance = 0.5*pi/180;
ConfigRobot.Safety.EMERGENCY_STOP_WITH_ENCODER_SPIKES = false;
ConfigRobot.Safety.maxJointsPositionDelta = 15*pi/180;
ConfigRobot.Safety.EMERGENCY_STOP_WITH_JOINTS_TORQUE_LIMITS = false;
ConfigRobot.Safety.jointTorqueLimitTollerance = 0;
